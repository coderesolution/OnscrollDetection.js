{"version":3,"file":"OnscrollDetection.mjs","sources":["../src/index.js"],"sourcesContent":["export default class OnscrollDetection {\n\tconstructor(options = {}) {\n\t\tthis.elements = options.elements || '[data-onscroll]'\n\t\tthis.screen = options.screen || '(min-width: 768px)'\n\t\tthis.scrollTriggers = new Map()\n\n\t\tthis.init()\n\t}\n\n\tinit() {\n\t\tgsap.utils.toArray(this.elements).forEach((element, index) => {\n\t\t\tconst trigger = this.getTrigger(element)\n\t\t\tconst screen = this.getScreen(element)\n\t\t\tconst matchMedia = gsap.matchMedia()\n\n\t\t\tconst fromProperties = this.getFromProperties(element, index)\n\t\t\tconst toProperties = this.getToProperties(element, index, trigger)\n\n\t\t\tconst animation = matchMedia.add(screen, () => {\n\t\t\t\tconst gsapAnimation = gsap.fromTo(element, fromProperties, toProperties)\n\t\t\t\tthis.scrollTriggers.set(gsapAnimation.scrollTrigger, {\n\t\t\t\t\telement,\n\t\t\t\t\tfromProperties,\n\t\t\t\t\ttoProperties,\n\t\t\t\t\tgsapAnimation,\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tthis.debugMode(element, index)\n\t\t})\n\t}\n\n\t// Helper methods\n\tgetTrigger(element) {\n\t\treturn element.hasAttribute('data-onscroll-auto') ? element.parentElement : element\n\t}\n\n\tgetScreen(element) {\n\t\treturn element.hasAttribute('data-onscroll-screen') ? element.dataset.onscrollScreen : this.screen\n\t}\n\n\tgetFromProperties(element, index) {\n\t\tconst animateFrom = this.getAnimateFrom(element)\n\t\tconst offset = this.getOffset(element)\n\n\t\treturn {\n\t\t\t...animateFrom,\n\t\t\tbottom: this.hasAttributes(element, ['data-onscroll-auto', 'data-onscroll-reverse']) ? 'auto' : null,\n\t\t\ttop:\n\t\t\t\tthis.hasAttributes(element, ['data-onscroll-auto']) &&\n\t\t\t\t!this.hasAttributes(element, ['data-onscroll-reverse'])\n\t\t\t\t\t? 'auto'\n\t\t\t\t\t: null,\n\t\t\tx:\n\t\t\t\tthis.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t\t(this.getDirection(element) === 'x' || this.getDirection(element) === 'xy')\n\t\t\t\t\t? offset\n\t\t\t\t\t: null,\n\t\t\ty:\n\t\t\t\t!this.hasAttributes(element, ['data-onscroll-direction']) ||\n\t\t\t\t(this.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t\t\t(this.getDirection(element) === 'y' || this.getDirection(element) === 'xy'))\n\t\t\t\t\t? offset\n\t\t\t\t\t: null,\n\t\t}\n\t}\n\n\tgetToProperties(element, index, trigger) {\n\t\tconst animateTo = this.getAnimateTo(element)\n\n\t\treturn {\n\t\t\t...animateTo,\n\t\t\tx: this.getX(element),\n\t\t\ty: this.getY(element),\n\t\t\tease: 'none',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: trigger,\n\t\t\t\tstart: this.getStart(element),\n\t\t\t\tend: this.getEnd(element),\n\t\t\t\tinvalidateOnRefresh: true,\n\t\t\t\tscrub: true,\n\t\t\t\tmarkers: this.hasAttributes(element, ['data-onscroll-debug']),\n\t\t\t},\n\t\t}\n\t}\n\n\thasAttributes(element, attrs) {\n\t\treturn attrs.every((attr) => element.hasAttribute(attr))\n\t}\n\n\tgetAnimateFrom(element) {\n\t\treturn element.hasAttribute('data-onscroll-from') ? JSON.parse(element.dataset.onscrollFrom) : []\n\t}\n\n\tgetAnimateTo(element) {\n\t\treturn element.hasAttribute('data-onscroll-to') ? JSON.parse(element.dataset.onscrollTo) : []\n\t}\n\n\tgetOffset(element) {\n\t\treturn element.hasAttribute('data-onscroll-offset') ? parseInt(element.dataset.onscrollOffset) : null\n\t}\n\n\tgetDirection(element) {\n\t\treturn element.dataset.onscrollDirection\n\t}\n\n\tgetX(element) {\n\t\tif (\n\t\t\tthis.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t(this.getDirection(element) === 'x' || this.getDirection(element) === 'xy')\n\t\t) {\n\t\t\treturn this.getDistanceOrSpeed(element)\n\t\t}\n\t}\n\n\tgetY(element) {\n\t\tif (\n\t\t\t!this.hasAttributes(element, ['data-onscroll-direction']) ||\n\t\t\t(this.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t\t(this.getDirection(element) === 'y' || this.getDirection(element) === 'xy'))\n\t\t) {\n\t\t\treturn this.getDistanceOrSpeed(element)\n\t\t}\n\t}\n\n\tgetDistanceOrSpeed(element) {\n\t\tif (this.hasAttributes(element, ['data-onscroll-speed'])) {\n\t\t\treturn (\n\t\t\t\t(1 - parseFloat(element.dataset.onscrollSpeed)) *\n\t\t\t\t(ScrollTrigger.maxScroll(window) - (this.scrollTrigger ? this.scrollTrigger.start : 0))\n\t\t\t)\n\t\t} else {\n\t\t\tlet distance = parseInt(element.dataset.onscrollDistance)\n\t\t\tif (this.hasAttributes(element, ['data-onscroll-auto'])) {\n\t\t\t\tdistance = element.offsetHeight - element.parentElement.offsetHeight\n\t\t\t}\n\t\t\tif (this.hasAttributes(element, ['data-onscroll-reverse'])) {\n\t\t\t\treturn -distance\n\t\t\t}\n\t\t\treturn distance\n\t\t}\n\t}\n\n\tgetStart(element) {\n\t\treturn element.dataset.onscrollStart ? element.dataset.onscrollStart : 'top bottom'\n\t}\n\n\tgetEnd(element) {\n\t\treturn element.dataset.onscrollEnd ? element.dataset.onscrollEnd : 'bottom top'\n\t}\n\n\tdebugMode(element, index) {\n\t\tif (this.hasAttributes(element, ['data-onscroll-debug'])) {\n\t\t\tconsole.group(`OnscrollDetection() debug instance (${index + 1})`)\n\t\t\tconsole.log({\n\t\t\t\telement: element,\n\t\t\t\ttrigger: this.getTrigger(element),\n\t\t\t\ttriggerStart: this.getStart(element),\n\t\t\t\ttriggerEnd: this.getEnd(element),\n\t\t\t\tauto: this.hasAttributes(element, ['data-onscroll-auto']),\n\t\t\t\toffset: this.getOffset(element),\n\t\t\t\tdistance: this.getDistanceOrSpeed(element),\n\t\t\t\tscreen: this.getScreen(element),\n\t\t\t\tspeed: this.hasAttributes(element, ['data-onscroll-speed'])\n\t\t\t\t\t? element.dataset.onscrollSpeed +\n\t\t\t\t\t  ' calculated at ' +\n\t\t\t\t\t  (1 - parseFloat(element.dataset.onscrollSpeed)) *\n\t\t\t\t\t\t\t(ScrollTrigger.maxScroll(window) - (this.scrollTrigger ? this.scrollTrigger.start : 0))\n\t\t\t\t\t: null,\n\t\t\t\tdirection: this.hasAttributes(element, ['data-onscroll-direction'])\n\t\t\t\t\t? element.dataset.onscrollDirection\n\t\t\t\t\t: 'y',\n\t\t\t\treverse: this.hasAttributes(element, ['data-onscroll-reverse']),\n\t\t\t\tanimateFrom: this.getAnimateFrom(element),\n\t\t\t\tanimateTo: this.getAnimateTo(element),\n\t\t\t})\n\t\t\tconsole.groupEnd()\n\t\t}\n\t}\n\n\trefresh() {\n\t\tScrollTrigger.refresh()\n\t}\n\n\trestart() {\n\t\t// Remove existing ScrollTriggers\n\t\tthis.stop()\n\n\t\t// Reinitialize the ScrollTrigger instances\n\t\tScrollTrigger.getAll().forEach((trigger) => trigger.kill())\n\n\t\t// Refresh ScrollTrigger\n\t\tScrollTrigger.refresh()\n\n\t\t// Reapply animations using the stored animation properties\n\t\tthis.init()\n\t}\n\n\tstop(target = null) {\n\t\tif (target) {\n\t\t\tconst animationData = this.scrollTriggers.get(target)\n\t\t\tif (animationData) {\n\t\t\t\tanimationData.gsapAnimation.kill()\n\t\t\t\tthis.scrollTriggers.delete(target)\n\t\t\t}\n\t\t} else {\n\t\t\tthis.scrollTriggers.forEach(({ gsapAnimation }) => {\n\t\t\t\tgsapAnimation.kill()\n\t\t\t})\n\t\t\tthis.scrollTriggers.clear() // Clear the ScrollTrigger instances map\n\t\t}\n\t}\n\n\tupdate(target, fromProperties, toProperties) {\n\t\tconst animationData = this.scrollTriggers.get(target)\n\n\t\tif (animationData) {\n\t\t\tanimationData.gsapAnimation.kill()\n\n\t\t\t// Reinitialize the animation\n\t\t\tconst gsapAnimation = gsap.fromTo(animationData.element, fromProperties, toProperties)\n\t\t\tthis.scrollTriggers.set(gsapAnimation.scrollTrigger, {\n\t\t\t\t...animationData,\n\t\t\t\tfromProperties,\n\t\t\t\ttoProperties,\n\t\t\t\tgsapAnimation,\n\t\t\t})\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tthis.stop()\n\t\tthis.scrollTriggers = null\n\t}\n}\n"],"names":["OnscrollDetection","options","this","elements","screen","scrollTriggers","Map","init","_proto","prototype","_this","gsap","utils","toArray","forEach","element","index","trigger","getTrigger","getScreen","matchMedia","fromProperties","getFromProperties","toProperties","getToProperties","add","gsapAnimation","fromTo","set","scrollTrigger","debugMode","hasAttribute","parentElement","dataset","onscrollScreen","animateFrom","getAnimateFrom","offset","getOffset","_extends","bottom","hasAttributes","top","x","getDirection","y","getAnimateTo","getX","getY","ease","start","getStart","end","getEnd","invalidateOnRefresh","scrub","markers","attrs","every","attr","JSON","parse","onscrollFrom","onscrollTo","parseInt","onscrollOffset","onscrollDirection","getDistanceOrSpeed","parseFloat","onscrollSpeed","ScrollTrigger","maxScroll","window","distance","onscrollDistance","offsetHeight","onscrollStart","onscrollEnd","console","group","log","triggerStart","triggerEnd","auto","speed","direction","reverse","animateTo","groupEnd","refresh","restart","stop","getAll","kill","target","animationData","get","_ref","clear","update","destroy"],"mappings":"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"}