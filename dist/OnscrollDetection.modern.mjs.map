{"version":3,"file":"OnscrollDetection.modern.mjs","sources":["../src/index.js"],"sourcesContent":["export default class OnscrollDetection {\n\tconstructor(options = {}) {\n\t\t// Initialise class properties with default values or provided options\n\t\tthis.elements = options.elements || '[data-onscroll]'\n\t\tthis.screen = options.screen || '(min-width: 1025px)'\n\t\tthis.triggers = new Map()\n\n\t\t// Set class names to defaults or provided options\n\t\tthis.classDefaults = {\n\t\t\tscrollingClass: 'is-scrolling',\n\t\t\tscrolledClass: 'has-scrolled',\n\t\t\tstickyClass: 'is-sticky',\n\t\t\tstuckClass: 'has-stuck',\n\t\t\t...options.classDefaults,\n\t\t}\n\n\t\t// Initialise event handlers\n\t\tthis.eventHandlers = {}\n\n\t\t// Initialise the class\n\t\tthis.init()\n\t}\n\n\t// Initialisation function\n\tinit() {\n\t\t// Convert elements to an array and loop through each\n\t\tgsap.utils.toArray(this.elements).forEach((element, index) => {\n\t\t\t// Get the trigger element\n\t\t\tconst trigger = this.getTrigger(element)\n\n\t\t\t// Get the screen media query\n\t\t\tconst screen = this.getScreen(element)\n\n\t\t\t// Create a matchMedia instance\n\t\t\tconst matchMedia = gsap.matchMedia()\n\n\t\t\t// Get the animation properties for 'from' state\n\t\t\tconst fromProperties = this.getFromProperties(element, index)\n\n\t\t\t// Get the animation properties for 'to' state\n\t\t\tconst toProperties = this.getToProperties(element, index, trigger)\n\n\t\t\t// Add the animation to the matchMedia instance and store the ScrollTrigger instance\n\t\t\tconst animation = matchMedia.add(screen, () => {\n\t\t\t\tconst gsapAnimation = gsap.fromTo(element, fromProperties, toProperties)\n\n\t\t\t\tthis.triggers.set(gsapAnimation.scrollTrigger, {\n\t\t\t\t\telement,\n\t\t\t\t\tfromProperties,\n\t\t\t\t\ttoProperties,\n\t\t\t\t\tgsapAnimation,\n\t\t\t\t})\n\t\t\t})\n\n\t\t\t// Enable debug mode for logging\n\t\t\tthis.debugMode(element, index)\n\t\t})\n\t}\n\n\t// Helper methods\n\ton(event, handler) {\n\t\tif (!this.eventHandlers[event]) {\n\t\t\tthis.eventHandlers[event] = []\n\t\t}\n\t\tthis.eventHandlers[event].push(handler)\n\t}\n\n\temit(event, ...args) {\n\t\tif (this.eventHandlers[event]) {\n\t\t\tthis.eventHandlers[event].forEach((handler) => handler(...args))\n\t\t}\n\t}\n\n\t// Get the trigger element for ScrollTrigger\n\tgetTrigger(element) {\n\t\tif (this.hasAttributes(element, ['data-onscroll-auto']) && !element.hasAttribute('data-onscroll-trigger')) {\n\t\t\t// If data-onscroll-auto is present and data-onscroll-trigger is not, use the parent element as the trigger\n\t\t\treturn element.parentElement\n\t\t} else if (element.hasAttribute('data-onscroll-trigger')) {\n\t\t\t// If data-onscroll-trigger is present, try to find the DOM element specified by the attribute\n\t\t\tlet triggerElement = document.querySelector(element.dataset.onscrollTrigger)\n\t\t\tif (triggerElement) {\n\t\t\t\treturn triggerElement\n\t\t\t} else {\n\t\t\t\tconsole.error(\n\t\t\t\t\t`Element specified by data-onscroll-trigger not found: ${element.dataset.onscrollTrigger}`\n\t\t\t\t)\n\t\t\t\treturn element\n\t\t\t}\n\t\t} else {\n\t\t\t// Otherwise, use the element itself as the trigger\n\t\t\treturn element\n\t\t}\n\t}\n\n\t// Get the screen media query\n\tgetScreen(element) {\n\t\treturn element.hasAttribute('data-onscroll-screen') ? element.dataset.onscrollScreen : this.screen\n\t}\n\n\t// Get the animation properties for 'from' state\n\tgetFromProperties(element, index) {\n\t\tconst animateFrom = this.getAnimateFrom(element)\n\t\tconst { offset } = this.getOffsetAndDistance(element)\n\n\t\treturn {\n\t\t\t...animateFrom,\n\t\t\tbottom: this.hasAttributes(element, ['data-onscroll-auto', 'data-onscroll-reverse']) ? 'auto' : null,\n\t\t\ttop:\n\t\t\t\tthis.hasAttributes(element, ['data-onscroll-auto']) &&\n\t\t\t\t!this.hasAttributes(element, ['data-onscroll-reverse'])\n\t\t\t\t\t? 'auto'\n\t\t\t\t\t: null,\n\t\t\tx:\n\t\t\t\tthis.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t\t(this.getDirection(element) === 'x' || this.getDirection(element) === 'xy')\n\t\t\t\t\t? offset\n\t\t\t\t\t: null,\n\t\t\ty:\n\t\t\t\t!this.hasAttributes(element, ['data-onscroll-direction']) ||\n\t\t\t\t(this.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t\t\t(this.getDirection(element) === 'y' || this.getDirection(element) === 'xy'))\n\t\t\t\t\t? offset\n\t\t\t\t\t: null,\n\t\t}\n\t}\n\n\t// Get the animation properties for 'to' state\n\tgetToProperties(element, index, trigger) {\n\t\tconst animateTo = this.getAnimateTo(element)\n\t\tconst stickyProperties = this.getStickyProperties(element)\n\t\tconst isSticky = this.hasAttributes(element, ['data-onscroll-sticky'])\n\t\tconst customEventName = element.getAttribute('data-onscroll-call')\n\n\t\treturn {\n\t\t\t...animateTo,\n\t\t\tx: this.getX(element),\n\t\t\ty: this.getY(element),\n\t\t\tease: 'none',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: isSticky ? element : trigger,\n\t\t\t\tstart: this.getStart(element),\n\t\t\t\tend: this.getEnd(element),\n\t\t\t\tinvalidateOnRefresh: true,\n\t\t\t\tpin: stickyProperties.pin,\n\t\t\t\tpinSpacing: stickyProperties.pinSpacing,\n\t\t\t\tscrub: this.getScrub(element),\n\t\t\t\tmarkers: this.hasAttributes(element, ['data-onscroll-debug']),\n\t\t\t\tonEnter: ({ direction }) => {\n\t\t\t\t\telement.classList.add(this.classDefaults.scrollingClass, this.classDefaults.scrolledClass)\n\t\t\t\t\tif (isSticky) {\n\t\t\t\t\t\telement.classList.add(this.classDefaults.stickyClass, this.classDefaults.stuckClass)\n\t\t\t\t\t}\n\t\t\t\t\tif (customEventName) {\n\t\t\t\t\t\t// Trigger custom event when the element enters the viewport\n\t\t\t\t\t\twindow.dispatchEvent(new CustomEvent(customEventName, {\n\t\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\t\ttarget: element,\n\t\t\t\t\t\t\t\tdirection: direction === 1 ? 'down' : 'up',\n\t\t\t\t\t\t\t\twhen: 'onEnter'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t\tthis.emit('onEnter', element)\n\t\t\t\t},\n\t\t\t\tonLeave: ({ direction }) => {\n\t\t\t\t\telement.classList.remove(this.classDefaults.scrollingClass)\n\t\t\t\t\tif (isSticky) {\n\t\t\t\t\t\telement.classList.remove(this.classDefaults.stickyClass)\n\t\t\t\t\t}\n\t\t\t\t\tif (customEventName) {\n\t\t\t\t\t\t// Trigger custom event when the element enters the viewport\n\t\t\t\t\t\twindow.dispatchEvent(new CustomEvent(customEventName, {\n\t\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\t\ttarget: element,\n\t\t\t\t\t\t\t\tdirection: direction === 1 ? 'down' : 'up',\n\t\t\t\t\t\t\t\twhen: 'onLeave'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t\tthis.emit('onLeave', element)\n\t\t\t\t},\n\t\t\t\tonEnterBack: ({ direction }) => {\n\t\t\t\t\telement.classList.add(this.classDefaults.scrollingClass)\n\t\t\t\t\tif (isSticky) {\n\t\t\t\t\t\telement.classList.add(this.classDefaults.stickyClass)\n\t\t\t\t\t}\n\t\t\t\t\tif (customEventName) {\n\t\t\t\t\t\t// Trigger custom event when the element enters the viewport\n\t\t\t\t\t\twindow.dispatchEvent(new CustomEvent(customEventName, {\n\t\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\t\ttarget: element,\n\t\t\t\t\t\t\t\tdirection: direction === 1 ? 'down' : 'up',\n\t\t\t\t\t\t\t\twhen: 'onEnterBack'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t\tthis.emit('onEnterBack', element)\n\t\t\t\t},\n\t\t\t\tonLeaveBack: ({ direction }) => {\n\t\t\t\t\telement.classList.remove(this.classDefaults.scrollingClass)\n\t\t\t\t\tif (isSticky) {\n\t\t\t\t\t\telement.classList.remove(this.classDefaults.stickyClass)\n\t\t\t\t\t}\n\t\t\t\t\tif (customEventName) {\n\t\t\t\t\t\t// Trigger custom event when the element enters the viewport\n\t\t\t\t\t\twindow.dispatchEvent(new CustomEvent(customEventName, {\n\t\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\t\ttarget: element,\n\t\t\t\t\t\t\t\tdirection: direction === 1 ? 'down' : 'up',\n\t\t\t\t\t\t\t\twhen: 'onLeaveBack'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t\tthis.emit('onLeaveBack', element)\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\t}\n\n\t// Get the sticky properties for ScrollTrigger animation\n\tgetStickyProperties(element) {\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\treturn { pin: true, pinSpacing: false }\n\t\t} else {\n\t\t\treturn { pin: false, pinSpacing: true }\n\t\t}\n\t}\n\n\t// Check if an element has all the specified attributes\n\thasAttributes(element, attrs) {\n\t\treturn attrs.every((attr) => element.hasAttribute(attr))\n\t}\n\n\t// Get the animation properties for 'from' state\n\tgetAnimateFrom(element) {\n\t\treturn element.hasAttribute('data-onscroll-from') ? JSON.parse(element.dataset.onscrollFrom) : []\n\t}\n\n\t// Get the animation properties for 'to' state\n\tgetAnimateTo(element) {\n\t\treturn element.hasAttribute('data-onscroll-to') ? JSON.parse(element.dataset.onscrollTo) : []\n\t}\n\n\t// Get the offset value\n\tgetOffset(element) {\n\t\treturn element.hasAttribute('data-onscroll-offset') ? parseInt(element.dataset.onscrollOffset) : null\n\t}\n\n\t// Get the scroll direction\n\tgetDirection(element) {\n\t\treturn element.dataset.onscrollDirection\n\t}\n\n\t// Get the 'x' value for ScrollTrigger animation\n\tgetX(element) {\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\treturn null\n\t\t}\n\t\tif (\n\t\t\tthis.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t(this.getDirection(element) === 'x' || this.getDirection(element) === 'xy')\n\t\t) {\n\t\t\treturn this.getDistanceOrSpeed(element)\n\t\t}\n\t}\n\n\t// Get the 'y' value for ScrollTrigger animation\n\tgetY(element) {\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\treturn null\n\t\t}\n\t\tif (\n\t\t\t!this.hasAttributes(element, ['data-onscroll-direction']) ||\n\t\t\t(this.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t\t(this.getDirection(element) === 'y' || this.getDirection(element) === 'xy'))\n\t\t) {\n\t\t\treturn this.getDistanceOrSpeed(element)\n\t\t}\n\t}\n\n\t// Get the offset and distance values\n\tgetOffsetAndDistance(element) {\n\t\t// Check if the element has the data-onscroll-sticky attribute\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\treturn { offset: null, distance: null }\n\t\t}\n\n\t\tlet offset = null\n\t\tlet distance = null\n\t\tconst triggerElement = this.getTrigger(element)\n\t\tconst triggerHeight = triggerElement.offsetHeight\n\n\t\tif (element.hasAttribute('data-onscroll-offset')) {\n\t\t\tconst [offsetValue, distanceValue] = element.dataset.onscrollOffset.split(',')\n\n\t\t\t// If the offset value ends with a '%', calculate it as a percentage of the trigger height\n\t\t\tif (offsetValue.trim().endsWith('%')) {\n\t\t\t\tconst offsetPercentage = parseFloat(offsetValue) / 100\n\t\t\t\toffset = offsetPercentage * triggerHeight\n\t\t\t} else {\n\t\t\t\toffset = parseFloat(offsetValue)\n\t\t\t}\n\n\t\t\t// If the distance value ends with a '%', calculate it as a percentage of the trigger height\n\t\t\tif (distanceValue.trim().endsWith('%')) {\n\t\t\t\tconst distancePercentage = parseFloat(distanceValue) / 100\n\t\t\t\tdistance = distancePercentage * triggerHeight\n\t\t\t} else {\n\t\t\t\tdistance = parseFloat(distanceValue)\n\t\t\t}\n\t\t}\n\n\t\treturn { offset, distance }\n\t}\n\n\t// Get the distance or speed value for ScrollTrigger animation\n\tgetDistanceOrSpeed(element) {\n\t\tconst { distance } = this.getOffsetAndDistance(element)\n\t\tconst viewportHeight = window.innerHeight\n\t\tlet scrollSpeed = element.dataset.onscrollSpeed\n\t\tlet additionalDistance = 0\n\n\t\t// Check if there are two values\n\t\tif (scrollSpeed && scrollSpeed.includes(',')) {\n\t\t\tconst [speed, percentage] = scrollSpeed.split(',').map(parseFloat)\n\n\t\t\t// Update the scrollSpeed and calculate the additional distance\n\t\t\tscrollSpeed = speed\n\t\t\tadditionalDistance = (percentage / 100) * viewportHeight\n\n\t\t\t// If scrollSpeed is negative, subtract the additional distance\n\t\t\tif (scrollSpeed < 0) {\n\t\t\t\tadditionalDistance *= -1\n\t\t\t}\n\t\t} else {\n\t\t\tscrollSpeed = parseFloat(scrollSpeed || '0')\n\t\t}\n\n\t\tif (this.hasAttributes(element, ['data-onscroll-auto'])) {\n\t\t\tconst triggerElement = this.getTrigger(element)\n\t\t\tconst autoDistance = Math.abs(triggerElement.offsetHeight - element.offsetHeight)\n\t\t\treturn this.hasAttributes(element, ['data-onscroll-reverse']) ? -autoDistance : autoDistance\n\t\t} else if (this.hasAttributes(element, ['data-onscroll-speed'])) {\n\t\t\tconst elementHeight = element.offsetHeight\n\t\t\tconst scrollDistance = scrollSpeed * elementHeight + additionalDistance\n\t\t\treturn this.hasAttributes(element, ['data-onscroll-reverse']) ? -scrollDistance : scrollDistance\n\t\t} else if (distance !== null) {\n\t\t\treturn this.hasAttributes(element, ['data-onscroll-reverse']) ? -distance : distance\n\t\t}\n\t}\n\n\t// Get the delay value which controls the scrub setting\n\tgetScrub(element) {\n\t\tif (this.hasAttributes(element, ['data-onscroll-delay'])) {\n\t\t\treturn parseInt(element.dataset.onscrollDelay)\n\t\t} else {\n\t\t\treturn true // Default scrub value if no 'data-onscroll-delay' attribute is present\n\t\t}\n\t}\n\n\t// Get the start value for ScrollTrigger animation\n\tgetStart(element) {\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\tlet stickyOffset = 0\n\n\t\t\tif (element.hasAttribute('data-onscroll-offset')) {\n\t\t\t\tconst [offsetValue, distanceValue] = element.dataset.onscrollOffset.split(',')\n\t\t\t\tstickyOffset = parseFloat(offsetValue)\n\t\t\t}\n\n\t\t\treturn (element.dataset.onscrollStart ? element.dataset.onscrollStart : 'top top') + '+=' + stickyOffset\n\t\t}\n\t\treturn element.dataset.onscrollStart ? element.dataset.onscrollStart : 'top bottom'\n\t}\n\n\t// Get the end value for ScrollTrigger animation\n\tgetEnd(element) {\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\tconst trigger = this.getTrigger(element)\n\t\t\tlet stickyOffset = 0\n\n\t\t\tif (element.hasAttribute('data-onscroll-offset')) {\n\t\t\t\tconst [offsetValue, distanceValue] = element.dataset.onscrollOffset.split(',')\n\t\t\t\tstickyOffset = parseFloat(distanceValue)\n\t\t\t}\n\n\t\t\tconst stickyDistance = trigger.clientHeight - element.clientHeight - stickyOffset\n\n\t\t\treturn '+=' + stickyDistance\n\t\t} else if (this.hasAttributes(element, ['data-onscroll-speed']) && !element.hasAttribute('data-onscroll-end')) {\n\t\t\tconst scrollDistance = this.getDistanceOrSpeed(element)\n\t\t\tconst { distance } = this.getOffsetAndDistance(element)\n\n\t\t\treturn `bottom${scrollDistance >= 0 ? '+=' : '-='}${Math.abs(scrollDistance)} top`\n\t\t} else {\n\t\t\treturn element.dataset.onscrollEnd ? element.dataset.onscrollEnd : 'bottom top'\n\t\t}\n\t}\n\n\t// Enable debug mode for logging\n\tdebugMode(element, index) {\n\t\tif (this.hasAttributes(element, ['data-onscroll-debug'])) {\n\t\t\tconst { offset, distance } = this.getOffsetAndDistance(element)\n\t\t\tlet speedMultiplier\n\t\t\tlet speedViewportPercentage\n\t\t\tif (this.hasAttributes(element, ['data-onscroll-speed'])) {\n\t\t\t\t;[speedMultiplier, speedViewportPercentage] = element.dataset.onscrollSpeed.split(',')\n\t\t\t}\n\t\t\tconsole.group(`OnscrollDetection() debug instance (#${index + 1})`)\n\t\t\tconsole.log({\n\t\t\t\telement: element,\n\t\t\t\ttrigger: this.getTrigger(element),\n\t\t\t\ttriggerStart: this.getStart(element),\n\t\t\t\ttriggerEnd: this.getEnd(element),\n\t\t\t\tauto: this.hasAttributes(element, ['data-onscroll-auto']),\n\t\t\t\toffsetBefore: offset,\n\t\t\t\toffsetAfter: this.getDistanceOrSpeed(element),\n\t\t\t\tdelay: this.getScrub(element),\n\t\t\t\tscreen: this.getScreen(element),\n\t\t\t\tspeed: this.hasAttributes(element, ['data-onscroll-speed'])\n\t\t\t\t\t? parseFloat(\n\t\t\t\t\t\t\tspeedMultiplier * element.clientHeight +\n\t\t\t\t\t\t\t\t(speedViewportPercentage / 100) * window.innerHeight\n\t\t\t\t\t  ) +\n\t\t\t\t\t  ' (' +\n\t\t\t\t\t  parseFloat(speedMultiplier) +\n\t\t\t\t\t  'x element height + ' +\n\t\t\t\t\t  parseFloat(speedViewportPercentage) +\n\t\t\t\t\t  '% of the viewport height)'\n\t\t\t\t\t: null,\n\t\t\t\tdirection: this.hasAttributes(element, ['data-onscroll-direction'])\n\t\t\t\t\t? element.dataset.onscrollDirection\n\t\t\t\t\t: 'y',\n\t\t\t\treverse: this.hasAttributes(element, ['data-onscroll-reverse']),\n\t\t\t\tsticky: this.hasAttributes(element, ['data-onscroll-sticky']) ? true : false,\n\t\t\t\tanimateFrom: this.getAnimateFrom(element),\n\t\t\t\tanimateTo: this.getAnimateTo(element),\n\t\t\t})\n\t\t\tconsole.groupEnd()\n\t\t}\n\t}\n\n\t// Fetch a trigger\n\tfetch(elementOrIndex) {\n\t\tif (typeof elementOrIndex === 'number') {\n\t\t\t// Treat argument as an index\n\t\t\tconst keys = Array.from(this.triggers.keys())\n\t\t\treturn keys[elementOrIndex]\n\t\t} else {\n\t\t\t// Assume argument is a DOM element\n\t\t\tlet trigger = null\n\t\t\tthis.triggers.forEach((value, key) => {\n\t\t\t\tif (value.element === elementOrIndex) {\n\t\t\t\t\ttrigger = key\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn trigger\n\t\t}\n\t}\n\n\t// Refresh ScrollTrigger instances\n\trefresh() {\n\t\tScrollTrigger.refresh()\n\n\t\t// Emit event after refresh is done\n\t\tthis.emit('refresh')\n\t}\n\n\t// Restart the animations and reinitialize the ScrollTrigger instances\n\trestart() {\n\t\t// Stop the current animations and remove ScrollTriggers\n\t\tthis.stop()\n\n\t\t// Kill all existing ScrollTrigger instances\n\t\tScrollTrigger.getAll().forEach((trigger) => trigger.kill())\n\n\t\t// Refresh ScrollTrigger\n\t\tScrollTrigger.refresh()\n\n\t\t// Reapply animations and initialize ScrollTrigger\n\t\tthis.init()\n\n\t\t// Emit event after restart is done\n\t\tthis.emit('restart')\n\t}\n\n\t// Stop animations and ScrollTriggers\n\tstop(target = null) {\n\t\tif (target) {\n\t\t\t// Stop animation and remove the ScrollTrigger for a specific target\n\t\t\tconst animationData = this.triggers.get(target)\n\t\t\tif (animationData) {\n\t\t\t\tanimationData.gsapAnimation.kill()\n\t\t\t\tthis.triggers.delete(target)\n\t\t\t}\n\t\t} else {\n\t\t\t// Stop all animations and clear the ScrollTrigger instances\n\t\t\tthis.triggers.forEach(({ gsapAnimation }) => {\n\t\t\t\tgsapAnimation.kill()\n\t\t\t})\n\t\t\tthis.triggers.clear()\n\t\t}\n\n\t\t// Emit event after stop is done\n\t\tthis.emit('stop', target)\n\t}\n\n\t// Update animation for a specific target with new fromProperties and toProperties\n\tupdate(target, fromProperties, toProperties) {\n\t\tconst animationData = this.triggers.get(target)\n\n\t\tif (animationData) {\n\t\t\t// Stop the existing animation\n\t\t\tanimationData.gsapAnimation.kill()\n\n\t\t\t// Reinitialize the animation with updated properties\n\t\t\tconst gsapAnimation = gsap.fromTo(animationData.element, fromProperties, toProperties)\n\t\t\tthis.triggers.set(gsapAnimation.scrollTrigger, {\n\t\t\t\t...animationData,\n\t\t\t\tfromProperties,\n\t\t\t\ttoProperties,\n\t\t\t\tgsapAnimation,\n\t\t\t})\n\t\t}\n\t}\n\n\t// Destroy the OnscrollDetection instance\n\tdestroy() {\n\t\t// Stop all animations and clear the ScrollTrigger instances\n\t\tthis.stop()\n\t\tthis.triggers = null\n\t}\n}\n"],"names":["OnscrollDetection","constructor","options","this","elements","screen","triggers","Map","classDefaults","_extends","scrollingClass","scrolledClass","stickyClass","stuckClass","eventHandlers","init","gsap","utils","toArray","forEach","element","index","trigger","getTrigger","getScreen","matchMedia","fromProperties","getFromProperties","toProperties","getToProperties","add","gsapAnimation","fromTo","set","scrollTrigger","debugMode","on","event","handler","push","emit","args","hasAttributes","hasAttribute","parentElement","document","querySelector","dataset","onscrollTrigger","console","error","onscrollScreen","animateFrom","getAnimateFrom","offset","getOffsetAndDistance","bottom","top","x","getDirection","y","animateTo","getAnimateTo","stickyProperties","getStickyProperties","isSticky","customEventName","getAttribute","getX","getY","ease","start","getStart","end","getEnd","invalidateOnRefresh","pin","pinSpacing","scrub","getScrub","markers","onEnter","direction","classList","window","dispatchEvent","CustomEvent","detail","target","when","onLeave","remove","onEnterBack","onLeaveBack","attrs","every","attr","JSON","parse","onscrollFrom","onscrollTo","getOffset","parseInt","onscrollOffset","onscrollDirection","getDistanceOrSpeed","distance","triggerHeight","offsetHeight","offsetValue","distanceValue","split","trim","endsWith","parseFloat","viewportHeight","innerHeight","scrollSpeed","onscrollSpeed","additionalDistance","includes","speed","percentage","map","triggerElement","autoDistance","Math","abs","scrollDistance","onscrollDelay","stickyOffset","onscrollStart","clientHeight","onscrollEnd","speedMultiplier","speedViewportPercentage","group","log","triggerStart","triggerEnd","auto","offsetBefore","offsetAfter","delay","reverse","sticky","groupEnd","fetch","elementOrIndex","Array","from","keys","value","key","refresh","ScrollTrigger","restart","stop","getAll","kill","animationData","get","delete","clear","update","destroy"],"mappings":"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"}