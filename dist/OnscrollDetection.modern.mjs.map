{"version":3,"file":"OnscrollDetection.modern.mjs","sources":["../src/index.js"],"sourcesContent":["export default class OnscrollDetection {\n\tconstructor(options = {}) {\n\t\tthis.elements = options.elements || '[data-onscroll]'\n\t\tthis.screen = options.screen || '(min-width: 768px)'\n\t\tthis.scrollTriggers = new Map()\n\n\t\tthis.init()\n\t}\n\n\tinit() {\n\t\tgsap.utils.toArray(this.elements).forEach((element, index) => {\n\t\t\tconst trigger = this.getTrigger(element)\n\t\t\tconst screen = this.getScreen(element)\n\t\t\tconst matchMedia = gsap.matchMedia()\n\n\t\t\tconst fromProperties = this.getFromProperties(element, index)\n\t\t\tconst toProperties = this.getToProperties(element, index, trigger)\n\n\t\t\tconst animation = matchMedia.add(screen, () => {\n\t\t\t\tconst gsapAnimation = gsap.fromTo(element, fromProperties, toProperties)\n\t\t\t\tthis.scrollTriggers.set(gsapAnimation.scrollTrigger, {\n\t\t\t\t\telement,\n\t\t\t\t\tfromProperties,\n\t\t\t\t\ttoProperties,\n\t\t\t\t\tgsapAnimation,\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tthis.debugMode(element, index)\n\t\t})\n\t}\n\n\t// Helper methods\n\tgetTrigger(element) {\n\t\treturn element.hasAttribute('data-onscroll-auto') ? element.parentElement : element\n\t}\n\n\tgetScreen(element) {\n\t\treturn element.hasAttribute('data-onscroll-screen') ? element.dataset.onscrollScreen : this.screen\n\t}\n\n\tgetFromProperties(element, index) {\n\t\tconst animateFrom = this.getAnimateFrom(element)\n\t\tconst offset = this.getOffset(element)\n\n\t\treturn {\n\t\t\t...animateFrom,\n\t\t\tbottom: this.hasAttributes(element, ['data-onscroll-auto', 'data-onscroll-reverse']) ? 'auto' : null,\n\t\t\ttop:\n\t\t\t\tthis.hasAttributes(element, ['data-onscroll-auto']) &&\n\t\t\t\t!this.hasAttributes(element, ['data-onscroll-reverse'])\n\t\t\t\t\t? 'auto'\n\t\t\t\t\t: null,\n\t\t\tx:\n\t\t\t\tthis.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t\t(this.getDirection(element) === 'x' || this.getDirection(element) === 'xy')\n\t\t\t\t\t? offset\n\t\t\t\t\t: null,\n\t\t\ty:\n\t\t\t\t!this.hasAttributes(element, ['data-onscroll-direction']) ||\n\t\t\t\t(this.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t\t\t(this.getDirection(element) === 'y' || this.getDirection(element) === 'xy'))\n\t\t\t\t\t? offset\n\t\t\t\t\t: null,\n\t\t}\n\t}\n\n\tgetToProperties(element, index, trigger) {\n\t\tconst animateTo = this.getAnimateTo(element)\n\n\t\treturn {\n\t\t\t...animateTo,\n\t\t\tx: this.getX(element),\n\t\t\ty: this.getY(element),\n\t\t\tease: 'none',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: trigger,\n\t\t\t\tstart: this.getStart(element),\n\t\t\t\tend: this.getEnd(element),\n\t\t\t\tinvalidateOnRefresh: true,\n\t\t\t\tscrub: true,\n\t\t\t\tmarkers: this.hasAttributes(element, ['data-onscroll-debug']),\n\t\t\t},\n\t\t}\n\t}\n\n\thasAttributes(element, attrs) {\n\t\treturn attrs.every((attr) => element.hasAttribute(attr))\n\t}\n\n\tgetAnimateFrom(element) {\n\t\treturn element.hasAttribute('data-onscroll-from') ? JSON.parse(element.dataset.onscrollFrom) : []\n\t}\n\n\tgetAnimateTo(element) {\n\t\treturn element.hasAttribute('data-onscroll-to') ? JSON.parse(element.dataset.onscrollTo) : []\n\t}\n\n\tgetOffset(element) {\n\t\treturn element.hasAttribute('data-onscroll-offset') ? parseInt(element.dataset.onscrollOffset) : null\n\t}\n\n\tgetDirection(element) {\n\t\treturn element.dataset.onscrollDirection\n\t}\n\n\tgetX(element) {\n\t\tif (\n\t\t\tthis.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t(this.getDirection(element) === 'x' || this.getDirection(element) === 'xy')\n\t\t) {\n\t\t\treturn this.getDistanceOrSpeed(element)\n\t\t}\n\t}\n\n\tgetY(element) {\n\t\tif (\n\t\t\t!this.hasAttributes(element, ['data-onscroll-direction']) ||\n\t\t\t(this.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t\t(this.getDirection(element) === 'y' || this.getDirection(element) === 'xy'))\n\t\t) {\n\t\t\treturn this.getDistanceOrSpeed(element)\n\t\t}\n\t}\n\n\tgetDistanceOrSpeed(element) {\n\t\tif (this.hasAttributes(element, ['data-onscroll-speed'])) {\n\t\t\treturn (\n\t\t\t\t(1 - parseFloat(element.dataset.onscrollSpeed)) *\n\t\t\t\t(ScrollTrigger.maxScroll(window) - (this.scrollTrigger ? this.scrollTrigger.start : 0))\n\t\t\t)\n\t\t} else {\n\t\t\tlet distance = parseInt(element.dataset.onscrollDistance)\n\t\t\tif (this.hasAttributes(element, ['data-onscroll-auto'])) {\n\t\t\t\tdistance = element.offsetHeight - element.parentElement.offsetHeight\n\t\t\t}\n\t\t\tif (this.hasAttributes(element, ['data-onscroll-reverse'])) {\n\t\t\t\treturn -distance\n\t\t\t}\n\t\t\treturn distance\n\t\t}\n\t}\n\n\tgetStart(element) {\n\t\treturn element.dataset.onscrollStart ? element.dataset.onscrollStart : 'top bottom'\n\t}\n\n\tgetEnd(element) {\n\t\treturn element.dataset.onscrollEnd ? element.dataset.onscrollEnd : 'bottom top'\n\t}\n\n\tdebugMode(element, index) {\n\t\tif (this.hasAttributes(element, ['data-onscroll-debug'])) {\n\t\t\tconsole.group(`OnscrollDetection() debug instance (${index + 1})`)\n\t\t\tconsole.log({\n\t\t\t\telement: element,\n\t\t\t\ttrigger: this.getTrigger(element),\n\t\t\t\ttriggerStart: this.getStart(element),\n\t\t\t\ttriggerEnd: this.getEnd(element),\n\t\t\t\tauto: this.hasAttributes(element, ['data-onscroll-auto']),\n\t\t\t\toffset: this.getOffset(element),\n\t\t\t\tdistance: this.getDistanceOrSpeed(element),\n\t\t\t\tscreen: this.getScreen(element),\n\t\t\t\tspeed: this.hasAttributes(element, ['data-onscroll-speed'])\n\t\t\t\t\t? element.dataset.onscrollSpeed +\n\t\t\t\t\t  ' calculated at ' +\n\t\t\t\t\t  (1 - parseFloat(element.dataset.onscrollSpeed)) *\n\t\t\t\t\t\t\t(ScrollTrigger.maxScroll(window) - (this.scrollTrigger ? this.scrollTrigger.start : 0))\n\t\t\t\t\t: null,\n\t\t\t\tdirection: this.hasAttributes(element, ['data-onscroll-direction'])\n\t\t\t\t\t? element.dataset.onscrollDirection\n\t\t\t\t\t: 'y',\n\t\t\t\treverse: this.hasAttributes(element, ['data-onscroll-reverse']),\n\t\t\t\tanimateFrom: this.getAnimateFrom(element),\n\t\t\t\tanimateTo: this.getAnimateTo(element),\n\t\t\t})\n\t\t\tconsole.groupEnd()\n\t\t}\n\t}\n\n\trefresh() {\n\t\tScrollTrigger.refresh()\n\t}\n\n\trestart() {\n\t\t// Remove existing ScrollTriggers\n\t\tthis.stop()\n\n\t\t// Reinitialize the ScrollTrigger instances\n\t\tScrollTrigger.getAll().forEach((trigger) => trigger.kill())\n\n\t\t// Refresh ScrollTrigger\n\t\tScrollTrigger.refresh()\n\n\t\t// Reapply animations using the stored animation properties\n\t\tthis.init()\n\t}\n\n\tstop(target = null) {\n\t\tif (target) {\n\t\t\tconst animationData = this.scrollTriggers.get(target)\n\t\t\tif (animationData) {\n\t\t\t\tanimationData.gsapAnimation.kill()\n\t\t\t\tthis.scrollTriggers.delete(target)\n\t\t\t}\n\t\t} else {\n\t\t\tthis.scrollTriggers.forEach(({ gsapAnimation }) => {\n\t\t\t\tgsapAnimation.kill()\n\t\t\t})\n\t\t\tthis.scrollTriggers.clear() // Clear the ScrollTrigger instances map\n\t\t}\n\t}\n\n\tupdate(target, fromProperties, toProperties) {\n\t\tconst animationData = this.scrollTriggers.get(target)\n\n\t\tif (animationData) {\n\t\t\tanimationData.gsapAnimation.kill()\n\n\t\t\t// Reinitialize the animation\n\t\t\tconst gsapAnimation = gsap.fromTo(animationData.element, fromProperties, toProperties)\n\t\t\tthis.scrollTriggers.set(gsapAnimation.scrollTrigger, {\n\t\t\t\t...animationData,\n\t\t\t\tfromProperties,\n\t\t\t\ttoProperties,\n\t\t\t\tgsapAnimation,\n\t\t\t})\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tthis.stop()\n\t\tthis.scrollTriggers = null\n\t}\n}\n"],"names":["OnscrollDetection","constructor","options","this","elements","screen","scrollTriggers","Map","init","gsap","utils","toArray","forEach","element","index","trigger","getTrigger","getScreen","matchMedia","fromProperties","getFromProperties","toProperties","getToProperties","add","gsapAnimation","fromTo","set","scrollTrigger","debugMode","hasAttribute","parentElement","dataset","onscrollScreen","animateFrom","getAnimateFrom","offset","getOffset","_extends","bottom","hasAttributes","top","x","getDirection","y","animateTo","getAnimateTo","getX","getY","ease","start","getStart","end","getEnd","invalidateOnRefresh","scrub","markers","attrs","every","attr","JSON","parse","onscrollFrom","onscrollTo","parseInt","onscrollOffset","onscrollDirection","getDistanceOrSpeed","parseFloat","onscrollSpeed","ScrollTrigger","maxScroll","window","distance","onscrollDistance","offsetHeight","onscrollStart","onscrollEnd","console","group","log","triggerStart","triggerEnd","auto","speed","direction","reverse","groupEnd","refresh","restart","stop","getAll","kill","target","animationData","get","delete","clear","update","destroy"],"mappings":"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"}