{"version":3,"file":"OnscrollDetection.js","sources":["../src/index.js"],"sourcesContent":["export default class OnscrollDetection {\n\tconstructor(options = {}) {\n\t\t// Initialise class properties with default values or provided options\n\t\tthis.elements = options.elements || '[data-onscroll]'\n\t\tthis.screen = options.screen || '(min-width: 1025px)'\n\t\tthis.triggers = new Map()\n\n\t\t// Set class names to defaults or provided options\n\t\tthis.scrollingClass = options.scrollingClass || 'is-scrolling'\n\t\tthis.scrolledClass = options.scrolledClass || 'has-scrolled'\n\t\tthis.stickyClass = options.stickyClass || 'is-sticky'\n\t\tthis.stuckClass = options.stuckClass || 'has-stuck'\n\n\t\t// Initialise event handlers\n\t\tthis.eventHandlers = {}\n\n\t\t// Set autoStart to true by default, or use provided value\n\t\tthis.autoStart = options.autoStart !== undefined ? options.autoStart : true\n\n\t\t// Initialise the class\n\t\tif (this.autoStart) {\n\t\t\tthis.init()\n\t\t}\n\t}\n\n\t// Initialisation function\n\tinit() {\n\t\t// Convert elements to an array and loop through each\n\t\tgsap.utils.toArray(this.elements).forEach((element, index) => {\n\t\t\t// Get the trigger element\n\t\t\tconst trigger = this.getTrigger(element)\n\n\t\t\t// Get the screen media query\n\t\t\tconst screen = this.getScreen(element)\n\n\t\t\t// Create a matchMedia instance\n\t\t\tconst matchMedia = gsap.matchMedia()\n\n\t\t\t// Get the animation properties for 'from' state\n\t\t\tconst fromProperties = this.getFromProperties(element, index)\n\n\t\t\t// Get the animation properties for 'to' state\n\t\t\tconst toProperties = this.getToProperties(element, index, trigger)\n\n\t\t\t// Add the animation to the matchMedia instance and store the ScrollTrigger instance\n\t\t\tconst animation = matchMedia.add(screen, () => {\n\t\t\t\tconst gsapAnimation = gsap.fromTo(element, fromProperties, toProperties)\n\n\t\t\t\tthis.triggers.set(gsapAnimation.scrollTrigger, {\n\t\t\t\t\telement,\n\t\t\t\t\tfromProperties,\n\t\t\t\t\ttoProperties,\n\t\t\t\t\tgsapAnimation,\n\t\t\t\t})\n\t\t\t})\n\n\t\t\t// Enable debug mode for logging\n\t\t\tthis.debugMode(element, index)\n\t\t})\n\t}\n\n\t// Function to load and initialize the class\n\tstart() {\n\t\t// Initialize the class\n\t\tthis.init()\n\t}\n\n\t// Helper methods\n\ton(event, handler) {\n\t\tif (!this.eventHandlers[event]) {\n\t\t\tthis.eventHandlers[event] = []\n\t\t}\n\t\tthis.eventHandlers[event].push(handler)\n\t}\n\n\temit(event, ...args) {\n\t\tif (this.eventHandlers[event]) {\n\t\t\tthis.eventHandlers[event].forEach((handler) => handler(...args))\n\t\t}\n\t}\n\n\t// Get the trigger element for ScrollTrigger\n\tgetTrigger(element) {\n\t\tif (this.hasAttributes(element, ['data-onscroll-auto']) && !element.hasAttribute('data-onscroll-trigger')) {\n\t\t\t// If data-onscroll-auto is present and data-onscroll-trigger is not, use the parent element as the trigger\n\t\t\treturn element.parentElement\n\t\t} else if (element.hasAttribute('data-onscroll-trigger')) {\n\t\t\t// If data-onscroll-trigger is present, try to find the DOM element specified by the attribute\n\t\t\tlet triggerElement = document.querySelector(element.dataset.onscrollTrigger)\n\t\t\tif (triggerElement) {\n\t\t\t\treturn triggerElement\n\t\t\t} else {\n\t\t\t\tconsole.error(\n\t\t\t\t\t`Element specified by data-onscroll-trigger not found: ${element.dataset.onscrollTrigger}`\n\t\t\t\t)\n\t\t\t\treturn element\n\t\t\t}\n\t\t} else {\n\t\t\t// Otherwise, use the element itself as the trigger\n\t\t\treturn element\n\t\t}\n\t}\n\n\t// Get the screen media query\n\tgetScreen(element) {\n\t\treturn element.hasAttribute('data-onscroll-screen') ? element.dataset.onscrollScreen : this.screen\n\t}\n\n\t// Get the animation properties for 'from' state\n\tgetFromProperties(element, index) {\n\t\tconst animateFrom = this.getAnimateFrom(element)\n\t\tconst { offset } = this.getOffsetAndDistance(element)\n\n\t\treturn {\n\t\t\t...animateFrom,\n\t\t\tbottom: this.hasAttributes(element, ['data-onscroll-auto', 'data-onscroll-reverse']) ? 'auto' : null,\n\t\t\ttop:\n\t\t\t\tthis.hasAttributes(element, ['data-onscroll-auto']) &&\n\t\t\t\t!this.hasAttributes(element, ['data-onscroll-reverse'])\n\t\t\t\t\t? 'auto'\n\t\t\t\t\t: null,\n\t\t\tx:\n\t\t\t\tthis.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t\t(this.getDirection(element) === 'x' || this.getDirection(element) === 'xy')\n\t\t\t\t\t? offset\n\t\t\t\t\t: null,\n\t\t\ty:\n\t\t\t\t!this.hasAttributes(element, ['data-onscroll-direction']) ||\n\t\t\t\t(this.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t\t\t(this.getDirection(element) === 'y' || this.getDirection(element) === 'xy'))\n\t\t\t\t\t? offset\n\t\t\t\t\t: null,\n\t\t}\n\t}\n\n\t// Get the animation properties for 'to' state\n\tgetToProperties(element, index, trigger) {\n\t\tconst animateTo = this.getAnimateTo(element)\n\t\tconst stickyProperties = this.getStickyProperties(element)\n\t\tconst isSticky = this.hasAttributes(element, ['data-onscroll-sticky'])\n\t\tconst customEventName = element.getAttribute('data-onscroll-call')\n\n\t\t// Helper function to dispatch the custom event\n\t\tconst dispatchCustomEvent = (when, direction) => {\n\t\t\tif (customEventName) {\n\t\t\t\twindow.dispatchEvent(\n\t\t\t\t\tnew CustomEvent(customEventName, {\n\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\ttarget: element,\n\t\t\t\t\t\t\tdirection: direction === 1 ? 'down' : 'up',\n\t\t\t\t\t\t\twhen,\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t...animateTo,\n\t\t\tx: this.getX(element),\n\t\t\ty: this.getY(element),\n\t\t\tease: 'none',\n\t\t\tscrollTrigger: {\n\t\t\t\ttrigger: isSticky ? element : trigger,\n\t\t\t\tstart: this.getStart(element),\n\t\t\t\tend: this.getEnd(element),\n\t\t\t\tinvalidateOnRefresh: true,\n\t\t\t\tpin: stickyProperties.pin,\n\t\t\t\tpinSpacing: stickyProperties.pinSpacing,\n\t\t\t\tscrub: this.getScrub(element),\n\t\t\t\tmarkers: this.hasAttributes(element, ['data-onscroll-debug']),\n\t\t\t\tonEnter: ({ direction }) => {\n\t\t\t\t\telement.classList.add(this.scrollingClass, this.scrolledClass)\n\t\t\t\t\tif (isSticky) {\n\t\t\t\t\t\telement.classList.add(this.stickyClass, this.stuckClass)\n\t\t\t\t\t}\n\t\t\t\t\tdispatchCustomEvent('onEnter', direction)\n\t\t\t\t\tthis.emit('onEnter', element)\n\t\t\t\t},\n\t\t\t\tonLeave: ({ direction }) => {\n\t\t\t\t\telement.classList.remove(this.scrollingClass)\n\t\t\t\t\tif (isSticky) {\n\t\t\t\t\t\telement.classList.remove(this.stickyClass)\n\t\t\t\t\t}\n\t\t\t\t\tdispatchCustomEvent('onLeave', direction)\n\t\t\t\t\tthis.emit('onLeave', element)\n\t\t\t\t},\n\t\t\t\tonEnterBack: ({ direction }) => {\n\t\t\t\t\telement.classList.add(this.scrollingClass)\n\t\t\t\t\tif (isSticky) {\n\t\t\t\t\t\telement.classList.add(this.stickyClass)\n\t\t\t\t\t}\n\t\t\t\t\tdispatchCustomEvent('onEnterBack', direction)\n\t\t\t\t\tthis.emit('onEnterBack', element)\n\t\t\t\t},\n\t\t\t\tonLeaveBack: ({ direction }) => {\n\t\t\t\t\telement.classList.remove(this.scrollingClass)\n\t\t\t\t\tif (isSticky) {\n\t\t\t\t\t\telement.classList.remove(this.stickyClass)\n\t\t\t\t\t}\n\t\t\t\t\tdispatchCustomEvent('onLeaveBack', direction)\n\t\t\t\t\tthis.emit('onLeaveBack', element)\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\t}\n\n\t// Get the sticky properties for ScrollTrigger animation\n\tgetStickyProperties(element) {\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\treturn { pin: true, pinSpacing: false }\n\t\t} else {\n\t\t\treturn { pin: false, pinSpacing: true }\n\t\t}\n\t}\n\n\t// Check if an element has all the specified attributes\n\thasAttributes(element, attrs) {\n\t\treturn attrs.every((attr) => element.hasAttribute(attr))\n\t}\n\n\t// Get the animation properties for 'from' state\n\tgetAnimateFrom(element) {\n\t\treturn element.hasAttribute('data-onscroll-from') ? JSON.parse(element.dataset.onscrollFrom) : []\n\t}\n\n\t// Get the animation properties for 'to' state\n\tgetAnimateTo(element) {\n\t\treturn element.hasAttribute('data-onscroll-to') ? JSON.parse(element.dataset.onscrollTo) : []\n\t}\n\n\t// Get the offset value\n\tgetOffset(element) {\n\t\treturn element.hasAttribute('data-onscroll-offset') ? parseInt(element.dataset.onscrollOffset) : null\n\t}\n\n\t// Get the scroll direction\n\tgetDirection(element) {\n\t\treturn element.dataset.onscrollDirection\n\t}\n\n\t// Get the 'x' value for ScrollTrigger animation\n\tgetX(element) {\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\treturn null\n\t\t}\n\t\tif (\n\t\t\tthis.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t(this.getDirection(element) === 'x' || this.getDirection(element) === 'xy')\n\t\t) {\n\t\t\treturn this.getDistanceOrSpeed(element)\n\t\t}\n\t}\n\n\t// Get the 'y' value for ScrollTrigger animation\n\tgetY(element) {\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\treturn null\n\t\t}\n\t\tif (\n\t\t\t!this.hasAttributes(element, ['data-onscroll-direction']) ||\n\t\t\t(this.hasAttributes(element, ['data-onscroll-direction']) &&\n\t\t\t\t(this.getDirection(element) === 'y' || this.getDirection(element) === 'xy'))\n\t\t) {\n\t\t\treturn this.getDistanceOrSpeed(element)\n\t\t}\n\t}\n\n\t// Get the offset and distance values\n\tgetOffsetAndDistance(element) {\n\t\t// Check if the element has the data-onscroll-sticky attribute\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\treturn { offset: null, distance: null }\n\t\t}\n\n\t\tlet offset = null\n\t\tlet distance = null\n\t\tconst triggerElement = this.getTrigger(element)\n\t\tconst triggerHeight = triggerElement.offsetHeight\n\n\t\tif (element.hasAttribute('data-onscroll-offset')) {\n\t\t\tconst [offsetValue, distanceValue] = element.dataset.onscrollOffset.split(',')\n\n\t\t\t// If the offset value ends with a '%', calculate it as a percentage of the trigger height\n\t\t\tif (offsetValue.trim().endsWith('%')) {\n\t\t\t\tconst offsetPercentage = parseFloat(offsetValue) / 100\n\t\t\t\toffset = offsetPercentage * triggerHeight\n\t\t\t} else {\n\t\t\t\toffset = parseFloat(offsetValue)\n\t\t\t}\n\n\t\t\t// If the distance value ends with a '%', calculate it as a percentage of the trigger height\n\t\t\tif (distanceValue.trim().endsWith('%')) {\n\t\t\t\tconst distancePercentage = parseFloat(distanceValue) / 100\n\t\t\t\tdistance = distancePercentage * triggerHeight\n\t\t\t} else {\n\t\t\t\tdistance = parseFloat(distanceValue)\n\t\t\t}\n\t\t}\n\n\t\treturn { offset, distance }\n\t}\n\n\t// Get the distance or speed value for ScrollTrigger animation\n\tgetDistanceOrSpeed(element) {\n\t\tconst { distance } = this.getOffsetAndDistance(element)\n\t\tconst viewportHeight = window.innerHeight\n\t\tlet scrollSpeed = element.dataset.onscrollSpeed\n\t\tlet additionalDistance = 0\n\n\t\t// Check if there are two values\n\t\tif (scrollSpeed && scrollSpeed.includes(',')) {\n\t\t\tconst [speed, percentage] = scrollSpeed.split(',').map(parseFloat)\n\n\t\t\t// Update the scrollSpeed and calculate the additional distance\n\t\t\tscrollSpeed = speed\n\t\t\tadditionalDistance = (percentage / 100) * viewportHeight\n\n\t\t\t// If scrollSpeed is negative, subtract the additional distance\n\t\t\tif (scrollSpeed < 0) {\n\t\t\t\tadditionalDistance *= -1\n\t\t\t}\n\t\t} else {\n\t\t\tscrollSpeed = parseFloat(scrollSpeed || '0')\n\t\t}\n\n\t\tif (this.hasAttributes(element, ['data-onscroll-auto'])) {\n\t\t\tconst triggerElement = this.getTrigger(element)\n\t\t\tconst autoDistance = Math.abs(triggerElement.offsetHeight - element.offsetHeight)\n\t\t\treturn this.hasAttributes(element, ['data-onscroll-reverse']) ? -autoDistance : autoDistance\n\t\t} else if (this.hasAttributes(element, ['data-onscroll-speed'])) {\n\t\t\tconst elementHeight = element.offsetHeight\n\t\t\tconst scrollDistance = scrollSpeed * elementHeight + additionalDistance\n\t\t\treturn this.hasAttributes(element, ['data-onscroll-reverse']) ? -scrollDistance : scrollDistance\n\t\t} else if (distance !== null) {\n\t\t\treturn this.hasAttributes(element, ['data-onscroll-reverse']) ? -distance : distance\n\t\t}\n\t}\n\n\t// Get the delay value which controls the scrub setting\n\tgetScrub(element) {\n\t\tif (this.hasAttributes(element, ['data-onscroll-delay'])) {\n\t\t\treturn parseInt(element.dataset.onscrollDelay)\n\t\t} else {\n\t\t\treturn true // Default scrub value if no 'data-onscroll-delay' attribute is present\n\t\t}\n\t}\n\n\t// Get the start value for ScrollTrigger animation\n\tgetStart(element) {\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\tlet stickyOffset = 0\n\n\t\t\tif (element.hasAttribute('data-onscroll-offset')) {\n\t\t\t\tconst [offsetValue, distanceValue] = element.dataset.onscrollOffset.split(',')\n\t\t\t\tstickyOffset = parseFloat(offsetValue)\n\t\t\t}\n\n\t\t\treturn (element.dataset.onscrollStart ? element.dataset.onscrollStart : 'top top') + '+=' + stickyOffset\n\t\t}\n\t\treturn element.dataset.onscrollStart ? element.dataset.onscrollStart : 'top bottom'\n\t}\n\n\t// Get the end value for ScrollTrigger animation\n\tgetEnd(element) {\n\t\tif (element.hasAttribute('data-onscroll-sticky')) {\n\t\t\tconst trigger = this.getTrigger(element)\n\t\t\tlet stickyOffset = 0\n\n\t\t\tif (element.hasAttribute('data-onscroll-offset')) {\n\t\t\t\tconst [offsetValue, distanceValue] = element.dataset.onscrollOffset.split(',')\n\t\t\t\tstickyOffset = parseFloat(distanceValue)\n\t\t\t}\n\n\t\t\tconst stickyDistance = trigger.clientHeight - element.clientHeight - stickyOffset\n\n\t\t\treturn '+=' + stickyDistance\n\t\t} else if (this.hasAttributes(element, ['data-onscroll-speed']) && !element.hasAttribute('data-onscroll-end')) {\n\t\t\tconst scrollDistance = this.getDistanceOrSpeed(element)\n\t\t\tconst { distance } = this.getOffsetAndDistance(element)\n\n\t\t\treturn `bottom${scrollDistance >= 0 ? '+=' : '-='}${Math.abs(scrollDistance)} top`\n\t\t} else {\n\t\t\treturn element.dataset.onscrollEnd ? element.dataset.onscrollEnd : 'bottom top'\n\t\t}\n\t}\n\n\t// Enable debug mode for logging\n\tdebugMode(element, index) {\n\t\tif (this.hasAttributes(element, ['data-onscroll-debug'])) {\n\t\t\tconst { offset, distance } = this.getOffsetAndDistance(element)\n\t\t\tlet speedMultiplier\n\t\t\tlet speedViewportPercentage\n\t\t\tif (this.hasAttributes(element, ['data-onscroll-speed'])) {\n\t\t\t\t;[speedMultiplier, speedViewportPercentage] = element.dataset.onscrollSpeed.split(',')\n\t\t\t}\n\t\t\tconsole.group(`OnscrollDetection() debug instance (#${index + 1})`)\n\t\t\tconsole.log({\n\t\t\t\telement: element,\n\t\t\t\ttrigger: this.getTrigger(element),\n\t\t\t\ttriggerStart: this.getStart(element),\n\t\t\t\ttriggerEnd: this.getEnd(element),\n\t\t\t\tauto: this.hasAttributes(element, ['data-onscroll-auto']),\n\t\t\t\toffsetBefore: offset,\n\t\t\t\toffsetAfter: this.getDistanceOrSpeed(element),\n\t\t\t\tdelay: this.getScrub(element),\n\t\t\t\tscreen: this.getScreen(element),\n\t\t\t\tspeed: this.hasAttributes(element, ['data-onscroll-speed'])\n\t\t\t\t\t? parseFloat(\n\t\t\t\t\t\t\tspeedMultiplier * element.clientHeight +\n\t\t\t\t\t\t\t\t(speedViewportPercentage / 100) * window.innerHeight\n\t\t\t\t\t  ) +\n\t\t\t\t\t  ' (' +\n\t\t\t\t\t  parseFloat(speedMultiplier) +\n\t\t\t\t\t  'x element height + ' +\n\t\t\t\t\t  parseFloat(speedViewportPercentage) +\n\t\t\t\t\t  '% of the viewport height)'\n\t\t\t\t\t: null,\n\t\t\t\tdirection: this.hasAttributes(element, ['data-onscroll-direction'])\n\t\t\t\t\t? element.dataset.onscrollDirection\n\t\t\t\t\t: 'y',\n\t\t\t\treverse: this.hasAttributes(element, ['data-onscroll-reverse']),\n\t\t\t\tsticky: this.hasAttributes(element, ['data-onscroll-sticky']) ? true : false,\n\t\t\t\tanimateFrom: this.getAnimateFrom(element),\n\t\t\t\tanimateTo: this.getAnimateTo(element),\n\t\t\t\tcustomEvent: this.hasAttributes(element, ['data-onscroll-call'])\n\t\t\t\t\t? element.getAttribute('data-onscroll-call')\n\t\t\t\t\t: null,\n\t\t\t})\n\t\t\tconsole.groupEnd()\n\t\t}\n\t}\n\n\t// Fetch a trigger\n\tfetch(elementOrIndex) {\n\t\tif (typeof elementOrIndex === 'number') {\n\t\t\t// Treat argument as an index\n\t\t\tconst keys = Array.from(this.triggers.keys())\n\t\t\treturn keys[elementOrIndex]\n\t\t} else {\n\t\t\t// Assume argument is a DOM element\n\t\t\tlet trigger = null\n\t\t\tthis.triggers.forEach((value, key) => {\n\t\t\t\tif (value.element === elementOrIndex) {\n\t\t\t\t\ttrigger = key\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn trigger\n\t\t}\n\t}\n\n\t// Refresh ScrollTrigger instances\n\trefresh() {\n\t\tScrollTrigger.refresh()\n\n\t\t// Emit event after refresh is done\n\t\tthis.emit('refresh')\n\t}\n\n\t// Restart the animations and reinitialize the ScrollTrigger instances\n\trestart() {\n\t\t// Stop the current animations and remove ScrollTriggers\n\t\tthis.stop()\n\n\t\t// Kill all existing ScrollTrigger instances\n\t\tScrollTrigger.getAll().forEach((trigger) => trigger.kill())\n\n\t\t// Refresh ScrollTrigger\n\t\tScrollTrigger.refresh()\n\n\t\t// Reapply animations and initialize ScrollTrigger\n\t\tthis.init()\n\n\t\t// Emit event after restart is done\n\t\tthis.emit('restart')\n\t}\n\n\t// Stop animations and ScrollTriggers\n\tstop(target = null) {\n\t\tif (target) {\n\t\t\t// Stop animation and remove the ScrollTrigger for a specific target\n\t\t\tconst animationData = this.triggers.get(target)\n\t\t\tif (animationData) {\n\t\t\t\tanimationData.gsapAnimation.kill()\n\t\t\t\tthis.triggers.delete(target)\n\t\t\t}\n\t\t} else {\n\t\t\t// Stop all animations and clear the ScrollTrigger instances\n\t\t\tthis.triggers.forEach(({ gsapAnimation }) => {\n\t\t\t\tgsapAnimation.kill()\n\t\t\t})\n\t\t\tthis.triggers.clear()\n\t\t}\n\n\t\t// Emit event after stop is done\n\t\tthis.emit('stop', target)\n\t}\n\n\t// Update animation for a specific target with new fromProperties and toProperties\n\tupdate(target, fromProperties, toProperties) {\n\t\tconst animationData = this.triggers.get(target)\n\n\t\tif (animationData) {\n\t\t\t// Stop the existing animation\n\t\t\tanimationData.gsapAnimation.kill()\n\n\t\t\t// Reinitialize the animation with updated properties\n\t\t\tconst gsapAnimation = gsap.fromTo(animationData.element, fromProperties, toProperties)\n\t\t\tthis.triggers.set(gsapAnimation.scrollTrigger, {\n\t\t\t\t...animationData,\n\t\t\t\tfromProperties,\n\t\t\t\ttoProperties,\n\t\t\t\tgsapAnimation,\n\t\t\t})\n\t\t}\n\t}\n\n\t// Destroy the OnscrollDetection instance\n\tdestroy() {\n\t\t// Stop all animations and clear the ScrollTrigger instances\n\t\tthis.stop()\n\t\tthis.triggers = null\n\t}\n}\n"],"names":["OnscrollDetection","options","this","elements","screen","triggers","Map","scrollingClass","scrolledClass","stickyClass","stuckClass","eventHandlers","autoStart","undefined","init","_proto","prototype","_this","gsap","utils","toArray","forEach","element","index","trigger","getTrigger","getScreen","matchMedia","fromProperties","getFromProperties","toProperties","getToProperties","add","gsapAnimation","fromTo","set","scrollTrigger","debugMode","start","on","event","handler","push","emit","_arguments","arguments","apply","slice","call","hasAttributes","hasAttribute","parentElement","document","querySelector","dataset","onscrollTrigger","console","error","onscrollScreen","animateFrom","getAnimateFrom","offset","getOffsetAndDistance","_extends","bottom","top","x","getDirection","y","_this2","animateTo","getAnimateTo","stickyProperties","getStickyProperties","isSticky","customEventName","getAttribute","dispatchCustomEvent","when","direction","window","dispatchEvent","CustomEvent","detail","target","getX","getY","ease","getStart","end","getEnd","invalidateOnRefresh","pin","pinSpacing","scrub","getScrub","markers","onEnter","_ref","classList","onLeave","_ref2","remove","onEnterBack","_ref3","onLeaveBack","_ref4","attrs","every","attr","JSON","parse","onscrollFrom","onscrollTo","getOffset","parseInt","onscrollOffset","onscrollDirection","getDistanceOrSpeed","distance","triggerHeight","offsetHeight","_element$dataset$onsc","split","offsetValue","distanceValue","trim","endsWith","parseFloat","viewportHeight","innerHeight","scrollSpeed","onscrollSpeed","additionalDistance","includes","_scrollSpeed$split$ma","map","triggerElement","autoDistance","Math","abs","scrollDistance","onscrollDelay","stickyOffset","_element$dataset$onsc2","onscrollStart","_element$dataset$onsc3","clientHeight","onscrollEnd","_this$getOffsetAndDis4","speedMultiplier","speedViewportPercentage","_element$dataset$onsc4","group","log","triggerStart","triggerEnd","auto","offsetBefore","offsetAfter","delay","speed","reverse","sticky","customEvent","groupEnd","fetch","elementOrIndex","Array","from","keys","value","key","refresh","ScrollTrigger","restart","stop","getAll","kill","animationData","get","_ref5","clear","update","destroy"],"mappings":"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"}