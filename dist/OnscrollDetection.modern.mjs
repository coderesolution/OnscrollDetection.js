function t(){return t=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(t[s]=r[s])}return t},t.apply(this,arguments)}class e{constructor(t={}){this.elements=t.elements||"[data-onscroll]",this.screen=t.screen||"(min-width: 768px)",this.triggers=new Map,this.init()}init(){gsap.utils.toArray(this.elements).forEach((t,e)=>{const r=this.getTrigger(t),s=this.getScreen(t),i=gsap.matchMedia(),o=this.getFromProperties(t,e),a=this.getToProperties(t,e,r);i.add(s,()=>{const e=gsap.fromTo(t,o,a);this.triggers.set(e.scrollTrigger,{element:t,fromProperties:o,toProperties:a,gsapAnimation:e})}),this.debugMode(t,e)})}getTrigger(t){return t.hasAttribute("data-onscroll-auto")?t.parentElement:t}getScreen(t){return t.hasAttribute("data-onscroll-screen")?t.dataset.onscrollScreen:this.screen}getFromProperties(e,r){const s=this.getAnimateFrom(e),i=this.getOffset(e);return t({},s,{bottom:this.hasAttributes(e,["data-onscroll-auto","data-onscroll-reverse"])?"auto":null,top:this.hasAttributes(e,["data-onscroll-auto"])&&!this.hasAttributes(e,["data-onscroll-reverse"])?"auto":null,x:!this.hasAttributes(e,["data-onscroll-direction"])||"x"!==this.getDirection(e)&&"xy"!==this.getDirection(e)?null:i,y:!this.hasAttributes(e,["data-onscroll-direction"])||this.hasAttributes(e,["data-onscroll-direction"])&&("y"===this.getDirection(e)||"xy"===this.getDirection(e))?i:null})}getToProperties(e,r,s){return t({},this.getAnimateTo(e),{x:this.getX(e),y:this.getY(e),ease:"none",scrollTrigger:{trigger:s,start:this.getStart(e),end:this.getEnd(e),invalidateOnRefresh:!0,scrub:this.getScrub(e),markers:this.hasAttributes(e,["data-onscroll-debug"])}})}hasAttributes(t,e){return e.every(e=>t.hasAttribute(e))}getAnimateFrom(t){return t.hasAttribute("data-onscroll-from")?JSON.parse(t.dataset.onscrollFrom):[]}getAnimateTo(t){return t.hasAttribute("data-onscroll-to")?JSON.parse(t.dataset.onscrollTo):[]}getOffset(t){return t.hasAttribute("data-onscroll-offset")?parseInt(t.dataset.onscrollOffset):null}getDirection(t){return t.dataset.onscrollDirection}getX(t){if(this.hasAttributes(t,["data-onscroll-direction"])&&("x"===this.getDirection(t)||"xy"===this.getDirection(t)))return this.getDistanceOrSpeed(t)}getY(t){if(!this.hasAttributes(t,["data-onscroll-direction"])||this.hasAttributes(t,["data-onscroll-direction"])&&("y"===this.getDirection(t)||"xy"===this.getDirection(t)))return this.getDistanceOrSpeed(t)}getDistanceOrSpeed(t){if(this.hasAttributes(t,["data-onscroll-speed"]))return(1-parseFloat(t.dataset.onscrollSpeed))*(ScrollTrigger.maxScroll(window)-(this.scrollTrigger?this.scrollTrigger.start:0));{let e=parseInt(t.dataset.onscrollDistance);return this.hasAttributes(t,["data-onscroll-auto"])&&(e=t.offsetHeight-t.parentElement.offsetHeight),this.hasAttributes(t,["data-onscroll-reverse"])?-e:e}}getScrub(t){if(t.hasAttribute("data-onscroll-delay")){let e=t.dataset.onscrollDelay;return"true"===e||"false"!==e&&parseInt(e)}return!0}getStart(t){return t.dataset.onscrollStart?t.dataset.onscrollStart:"top bottom"}getEnd(t){return t.dataset.onscrollEnd?t.dataset.onscrollEnd:"bottom top"}debugMode(t,e){this.hasAttributes(t,["data-onscroll-debug"])&&(console.group(`OnscrollDetection() debug instance (${e+1})`),console.log({element:t,trigger:this.getTrigger(t),triggerStart:this.getStart(t),triggerEnd:this.getEnd(t),auto:this.hasAttributes(t,["data-onscroll-auto"]),offset:this.getOffset(t),distance:this.getDistanceOrSpeed(t),delay:this.getScrub(t),screen:this.getScreen(t),speed:this.hasAttributes(t,["data-onscroll-speed"])?t.dataset.onscrollSpeed+" calculated at "+(1-parseFloat(t.dataset.onscrollSpeed))*(ScrollTrigger.maxScroll(window)-(this.scrollTrigger?this.scrollTrigger.start:0)):null,direction:this.hasAttributes(t,["data-onscroll-direction"])?t.dataset.onscrollDirection:"y",reverse:this.hasAttributes(t,["data-onscroll-reverse"]),animateFrom:this.getAnimateFrom(t),animateTo:this.getAnimateTo(t)}),console.groupEnd())}refresh(){ScrollTrigger.refresh()}restart(){this.stop(),ScrollTrigger.getAll().forEach(t=>t.kill()),ScrollTrigger.refresh(),this.init()}stop(t=null){if(t){const e=this.triggers.get(t);e&&(e.gsapAnimation.kill(),this.triggers.delete(t))}else this.triggers.forEach(({gsapAnimation:t})=>{t.kill()}),this.triggers.clear()}update(e,r,s){const i=this.triggers.get(e);if(i){i.gsapAnimation.kill();const e=gsap.fromTo(i.element,r,s);this.triggers.set(e.scrollTrigger,t({},i,{fromProperties:r,toProperties:s,gsapAnimation:e}))}}destroy(){this.stop(),this.triggers=null}}export{e as default};
//# sourceMappingURL=OnscrollDetection.modern.mjs.map
